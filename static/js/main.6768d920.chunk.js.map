{"version":3,"sources":["components/Drumpad.js","components/Padbank.js","App.js","serviceWorker.js","index.js"],"names":["activeStyle","backgroundColor","boxShadow","height","marginTop","color","inactiveStyle","DrumPad","props","state","padStyle","playSound","bind","handleKeyPress","activatePad","document","addEventListener","this","removeEventListener","e","keyCode","power","setState","sound","getElementById","keyTrigger","currentTime","play","setTimeout","updateDisplay","clipId","replace","className","id","onClick","style","src","clip","React","Component","PadBank","padBank","currentPadBank","map","drumObj","i","padBankArr","url","bankOne","bankTwo","App","display","String","fromCharCode","currentPadBankId","sliderVal","displayClipName","selectBank","adjustVolume","powerControl","clearDisplay","prev","name","target","value","Math","round","slice","call","getElementsByClassName","forEach","volume","clipVolume","type","checked","max","min","onChange","step","href","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6768d920.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst activeStyle = {\r\n  backgroundColor: \"orange\",\r\n  boxShadow: \"0 3px orange\",\r\n  height: 77,\r\n  marginTop: 13,\r\n  color: \"orange\",\r\n};\r\n\r\nconst inactiveStyle = {\r\n  marginTop: 10,\r\n  boxShadow: \"3px 3px 5px black\",\r\n};\r\n\r\nexport default class DrumPad extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      padStyle: inactiveStyle,\r\n    };\r\n    this.playSound = this.playSound.bind(this);\r\n    this.handleKeyPress = this.handleKeyPress.bind(this);\r\n    this.activatePad = this.activatePad.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.handleKeyPress);\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.handleKeyPress);\r\n  }\r\n  handleKeyPress(e) {\r\n    if (e.keyCode === this.props.keyCode) {\r\n      this.playSound();\r\n    }\r\n  }\r\n  activatePad() {\r\n    if (this.props.power) {\r\n      if (this.state.padStyle.backgroundColor === \"orange\") {\r\n        this.setState({\r\n          padStyle: inactiveStyle,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          padStyle: activeStyle,\r\n        });\r\n      }\r\n    } else if (this.state.padStyle.marginTop === 13) {\r\n      this.setState({\r\n        padStyle: inactiveStyle,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        padStyle: {\r\n          height: 77,\r\n          marginTop: 13,\r\n          boxShadow: \"0 3px grey\",\r\n        },\r\n      });\r\n    }\r\n  }\r\n  playSound() {\r\n    const sound = document.getElementById(this.props.keyTrigger);\r\n    sound.currentTime = 0;\r\n    sound.play();\r\n    this.activatePad();\r\n    setTimeout(() => this.activatePad(), 100);\r\n    this.props.updateDisplay(this.props.clipId.replace(/-/g, \" \"));\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"drum-pad\"\r\n        id={this.props.clipId}\r\n        onClick={this.playSound}\r\n        style={this.state.padStyle}\r\n      >\r\n        <audio\r\n          className=\"clip\"\r\n          id={this.props.keyTrigger}\r\n          src={this.props.clip}\r\n        />\r\n        {this.props.keyTrigger}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport DrumPad from \"./Drumpad\";\r\n\r\nexport default class PadBank extends React.Component {\r\n  render() {\r\n    let padBank;\r\n    if (this.props.power) {\r\n      padBank = this.props.currentPadBank.map((drumObj, i, padBankArr) => {\r\n        return (\r\n          <DrumPad\r\n            clip={padBankArr[i].url}\r\n            clipId={padBankArr[i].id}\r\n            keyCode={padBankArr[i].keyCode}\r\n            keyTrigger={padBankArr[i].keyTrigger}\r\n            power={this.props.power}\r\n            updateDisplay={this.props.updateDisplay}\r\n          />\r\n        );\r\n      });\r\n    } else {\r\n      padBank = this.props.currentPadBank.map((drumObj, i, padBankArr) => {\r\n        return (\r\n          <DrumPad\r\n            clip=\"#\"\r\n            clipId={padBankArr[i].id}\r\n            keyCode={padBankArr[i].keyCode}\r\n            keyTrigger={padBankArr[i].keyTrigger}\r\n            power={this.props.power}\r\n            updateDisplay={this.props.updateDisplay}\r\n          />\r\n        );\r\n      });\r\n    }\r\n    return <div className=\"pad-bank\">{padBank}</div>;\r\n  }\r\n}\r\n","import React from \"react\";\nimport PadBank from \"./components/Padbank\";\nimport \"./App.scss\";\n\nconst bankOne = [\n  {\n    keyCode: 81,\n    keyTrigger: \"Q\",\n    id: \"Heater-1\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\",\n  },\n  {\n    keyCode: 87,\n    keyTrigger: \"W\",\n    id: \"Heater-2\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\",\n  },\n  {\n    keyCode: 69,\n    keyTrigger: \"E\",\n    id: \"Heater-3\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\",\n  },\n  {\n    keyCode: 65,\n    keyTrigger: \"A\",\n    id: \"Heater-4\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\",\n  },\n  {\n    keyCode: 83,\n    keyTrigger: \"S\",\n    id: \"Clap\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\",\n  },\n  {\n    keyCode: 68,\n    keyTrigger: \"D\",\n    id: \"Open-HH\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\",\n  },\n  {\n    keyCode: 90,\n    keyTrigger: \"Z\",\n    id: \"Kick-n'-Hat\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\",\n  },\n  {\n    keyCode: 88,\n    keyTrigger: \"X\",\n    id: \"Kick\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\",\n  },\n  {\n    keyCode: 67,\n    keyTrigger: \"C\",\n    id: \"Closed-HH\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\",\n  },\n];\n\nconst bankTwo = [\n  {\n    keyCode: 81,\n    keyTrigger: \"Q\",\n    id: \"Chord-1\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3\",\n  },\n  {\n    keyCode: 87,\n    keyTrigger: \"W\",\n    id: \"Chord-2\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3\",\n  },\n  {\n    keyCode: 69,\n    keyTrigger: \"E\",\n    id: \"Chord-3\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3\",\n  },\n  {\n    keyCode: 65,\n    keyTrigger: \"A\",\n    id: \"Shaker\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3\",\n  },\n  {\n    keyCode: 83,\n    keyTrigger: \"S\",\n    id: \"Open-HH\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3\",\n  },\n  {\n    keyCode: 68,\n    keyTrigger: \"D\",\n    id: \"Closed-HH\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3\",\n  },\n  {\n    keyCode: 90,\n    keyTrigger: \"Z\",\n    id: \"Punchy-Kick\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3\",\n  },\n  {\n    keyCode: 88,\n    keyTrigger: \"X\",\n    id: \"Side-Stick\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3\",\n  },\n  {\n    keyCode: 67,\n    keyTrigger: \"C\",\n    id: \"Snare\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3\",\n  },\n];\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      power: true,\n      display: String.fromCharCode(160),\n      currentPadBank: bankOne,\n      currentPadBankId: \"Heater Kit\",\n      sliderVal: 0.3,\n    };\n    this.displayClipName = this.displayClipName.bind(this);\n    this.selectBank = this.selectBank.bind(this);\n    this.adjustVolume = this.adjustVolume.bind(this);\n    this.powerControl = this.powerControl.bind(this);\n    this.clearDisplay = this.clearDisplay.bind(this);\n  }\n  powerControl() {\n    this.setState((prev) => {\n      return {\n        power: !prev.power,\n        display: String.fromCharCode(160),\n      };\n    });\n  }\n  selectBank() {\n    if (this.state.power) {\n      if (this.state.currentPadBankId === \"Heater Kit\") {\n        this.setState({\n          currentPadBank: bankTwo,\n          display: \"Smooth Piano Kit\",\n          currentPadBankId: \"Smooth Piano Kit\",\n        });\n      } else {\n        this.setState({\n          currentPadBank: bankOne,\n          display: \"Heater Kit\",\n          currentPadBankId: \"Heater Kit\",\n        });\n      }\n    }\n  }\n  displayClipName(name) {\n    if (this.state.power) {\n      this.setState({\n        display: name,\n      });\n    }\n  }\n  adjustVolume(e) {\n    if (this.state.power) {\n      this.setState({\n        sliderVal: e.target.value,\n        display: \"Volume: \" + Math.round(e.target.value * 100),\n      });\n      setTimeout(() => this.clearDisplay(), 1000);\n    }\n  }\n  clearDisplay() {\n    this.setState({\n      display: String.fromCharCode(160),\n    });\n  }\n  render() {\n    {\n      const clips = [].slice.call(document.getElementsByClassName(\"clip\"));\n      clips.forEach((sound) => {\n        sound.volume = this.state.sliderVal;\n      });\n    }\n    return (\n      <div className=\"inner-container\" id=\"drum-machine\">\n        <PadBank\n          clipVolume={this.state.sliderVal}\n          currentPadBank={this.state.currentPadBank}\n          power={this.state.power}\n          updateDisplay={this.displayClipName}\n        />\n\n        <div className=\"logo\">\n          <div className=\"inner-logo\">{\"LEGO\"}</div>\n        </div>\n\n        <div className=\"controls-container\">\n          <div className=\"control\">\n            <p>Power</p>\n            <div className=\"power\">\n              <label>\n                <input type=\"checkbox\" name=\"\" checked={this.state.power} />\n                <span className=\"btn\"></span>\n                <i className=\"fa fa-power-off\" onClick={this.powerControl}></i>\n              </label>\n            </div>\n          </div>\n          <p id=\"display\">{this.state.display}</p>\n          <div className=\"volume-slider\">\n            <input\n              max=\"1\"\n              min=\"0\"\n              onChange={this.adjustVolume}\n              step=\"0.01\"\n              type=\"range\"\n              value={this.state.sliderVal}\n            />\n          </div>\n          <div className=\"control banker\">\n            <p>Bank</p>\n            <div className=\"center\" onClick={this.selectBank}>\n              <input type=\"checkbox\" name=\"bank\" />\n            </div>\n          </div>\n        </div>\n        <div className=\"footer\">\n          <a\n            className=\"contact\"\n            target=\"blank\"\n            href=\"https://linkedin.com/in/godwin-obamina\"\n          >\n            <button>\n              by Beewan <i className=\"fa fa-linkedin-square\"></i>\n            </button>\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}